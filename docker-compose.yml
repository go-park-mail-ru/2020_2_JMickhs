version: "3"

volumes:
  user-data:
  main-data:
  redis-data:
  prometheus-data:

services:
  main_service:
    image: kostikan/main_service:${APP_VERSION}
    ports:
      - "8080:8080"
    network_mode: host
    depends_on:
      - redis
      - postgresMain
    env_file:
      - main/postgresMain.env

    restart: always
    volumes:
      - /home/ubuntu/ssl:/etc/ssl/hostelscan:ro
      - main-data:/var/lib/postgresql/data
  session_service:
    image: kostikan/session_service:${APP_VERSION}
    network_mode: host
    env_file:
      - sessions/redisSession.env
    depends_on:
      - redis
    restart: always
    volumes:
      - redis-data:/data
  user_service:
    image: kostikan/user_service:${APP_VERSION}
    network_mode: host
    ports:
      - "8082:8082"
    env_file:
      - user/postgresUser.env
    depends_on:
      - postgresUser
    restart: always
    volumes:
      - /home/ubuntu/ssl:/etc/ssl/hostelscan:ro
      - user-data:/var/lib/postgresql/data
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data:rw

  postgresMain:
      image: kartoza/postgis:13.0
      expose:
        - "5432"
      volumes:
        - main-data:/var/lib/postgresql
        - ./bdMain.sql:/docker-entrypoint-initdb.d/init.sql
      env_file:
        - main/postgresMain.env

      ports:
        - "5432:5432"
      restart: on-failure

  postgresUser:
    image: kartoza/postgis:13.0
    volumes:
      - user-data:/var/lib/postgresql
      - ./bdUser.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - user/postgresUser.env
    expose:
      - "5433"
    ports:
      - "5433:5432"
    command: -p 5433
    restart: on-failure
  prometheus:
    image: prom/prometheus
    privileged: true
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    network_mode:
      host
    expose:
      - "9090"
  grafana:
    image: grafana/grafana
    user: "grafana"
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    env_file:
      - grafana/config.monitoring.env
    restart: always
  node-exporter:
    image: prom/node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - '9100:9100'

